name: Publish/Upload dotnet package on release

# PLEASE NOTE: PUBLISHING/DEPLOYMENT
#   * Release is to be created manually at GitHub releases management page
#     * release name usually contains "1.2.3.4" (also supported: "v1.2.3.4")
#   * After creating a GitHub release, following actions will automatically run:
#     * Attaching of compiled binaries to GitHub release

on:
  release:
    types: [created]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write  # nötig fürs Anhängen von Assets an eine Release

env:
  BUILD_CONFIGURATION: CI_CD
  BUILD_OUTPUT_BASEDIR1: GuacamoleClient-WinForms/bin/Debug/net8.0-windows
  BUILD_OUTPUT_BASEDIR2: GuacamoleClient-Avalonia/bin/Debug/net8.0
  BUILD_OUTPUT_BASEDIR3: GuacamoleClient-Avalonia/bin/Debug/net8.0/osx-arm64/publish

jobs:
  publish:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        #os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Extract version from release tag
        shell: bash
        run: |
          RAW_TAG="${{ github.event.release.tag_name || github.ref_name }}"
          VER="${RAW_TAG#v}"       # führendes "v" streichen, falls vorhanden
          echo "VERSION=$VER" >> $GITHUB_ENV
          echo "Resolved VERSION=$VER"

      - name: Restore
        run: dotnet restore

      - name: Build (WinForms + Avalonia) with version
        if: runner.os != 'macOS'
        run: >
          dotnet build
          --configuration ${{ env.BUILD_CONFIGURATION }}
          --no-restore
          -p:Version=${{ env.VERSION }}
          -p:FileVersion=${{ env.VERSION }}
          -p:AssemblyVersion=${{ env.VERSION }}
          -p:InformationalVersion=${{ env.VERSION }}

      - name: Publish Avalonia (macOS bundle)
        if: runner.os == 'macOS'
        run: >
          dotnet publish GuacamoleClient-Avalonia/GuacamoleClient-Avalonia.csproj
          -c Debug -r osx-arm64 --self-contained false
          /p:PublishSingleFile=false
          /p:IncludeNativeLibrariesForSelfExtract=false
          -p:Version=${{ env.VERSION }}
          -p:FileVersion=${{ env.VERSION }}
          -p:AssemblyVersion=${{ env.VERSION }}
          -p:InformationalVersion=${{ env.VERSION }}
      
      - name: Pack Avalonia macOS artifact
        if: runner.os == 'macOS'
        run: |
          (cd "$BUILD_OUTPUT_BASEDIR3" && zip "$GITHUB_WORKSPACE/bin-avalonia-osx-arm64-${{ env.VERSION }}.zip" -r .)

      - name: Pack binaries - WinForms
        if: runner.os != 'macOS'
        run: |
          (cd "${{ env.BUILD_OUTPUT_BASEDIR1 }}" && zip "$GITHUB_WORKSPACE/bin-winforms-${{ env.VERSION }}.zip" -r .)

      - name: Pack binaries - Avalonia
        if: runner.os != 'macOS'
        run: |
          (cd "${{ env.BUILD_OUTPUT_BASEDIR2 }}" && zip "$GITHUB_WORKSPACE/bin-avalonia-${{ env.VERSION }}.zip" -r .)

      - name: Pack binaries - Avalonia - MacOS
        if: runner.os == 'macOS'
        run: |
          (cd "${{ env.BUILD_OUTPUT_BASEDIR2 }}" && zip "$GITHUB_WORKSPACE/bin-avalonia-${{ env.VERSION }}.zip" -r .)

      - name: Publish binaries to the release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            bin-winforms-${{ env.VERSION }}.zip
            bin-avalonia-${{ env.VERSION }}.zip
          tag_name: ${{ github.event.release.tag_name || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish binaries to the release (macOS)
        uses: softprops/action-gh-release@v2
        with:
          files: |
            bin-avalonia-osx-arm64-${{ env.VERSION }}.zip
          tag_name: ${{ github.event.release.tag_name || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
